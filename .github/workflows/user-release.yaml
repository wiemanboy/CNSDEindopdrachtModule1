name: user release

on:
  release:
    paths: 'user/**'
    types:
      - released
    branches:
      - release/**
      - master
    workflow_dispatch:
      inputs:
        version:
          description: 'Version of the application'
          required: true
          default: 'latest'

jobs:
    deploy:
        runs-on: ubuntu-latest
        working-directory: user
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set version
              id: set-version
              run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV

            - name: Install xmllint
              run: |
                sudo apt-get update
                sudo apt-get install -y libxml2-utils

            - name: Extract version from pom.xml
              if: github.event.inputs.version == ''
              id: extract-version
              run: |
                VERSION=$(xmllint --xpath 'string(/*[local-name()="project"]/*[local-name()="version"])' pom.xml)
                echo "VERSION=${VERSION}" >> $GITHUB_ENV

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
                aws-region: us-east-1

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY: account-service
                IMAGE_TAG: ${{ env.VERSION }}
              run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT\

            - name: Create release
              uses: marvinpinto/action-automatic-releases@latest
              with:
                repo_token: "${{ secrets.TOKEN }}"
                automatic_release_tag: ${{ env.VERSION }}
                prerelease: ${{ github.ref != 'refs/heads/master' }}
                title: "${{ github.event.repository.name }} v${{ env.VERSION }}"